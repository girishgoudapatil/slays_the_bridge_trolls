""" assurance.py: mock steps demonstrating cryptographic verification

    Not implemented or explored in depth as part fo the GovHack.
    
    Evidence if need is documented in public conversation with a business
    ledger service on the github repository of the REST-ANeIS subgroup.
    https://github.com/ausdigital/RESTful-framework/issues/6

    The basic concept behind the need for cryptographic protocol is
    to make the data completly open (on the blockchain and/or published
    through open REST APIs), while keepin the information completely
    secret.
"""
from util import *

@step(u'"([^"]*)" is the low-trust eInvoice package generated by "([^"]*)"')
def pkg_is_the_low_trust_einvoice_package_generated_by_seller_fs(step, pkg, seller_fs):
    # mock eInvoice (encrypted)
    wait()

@step(u'"([^"]*)" contains an encrypted payload')
def pkg_contains_an_encrypted_payload(step, group1):
    # mock eInvoice (encrypted)
    wait()

@step(u'"([^"]*)" contains a recipient identifier')
def pkg_a_recipient_identifier(step, group1):
    # mock eInvoice (encrypted)
    wait()

@step(u'"([^"]*)" contains a recipient identifier type')
def pkg_contains_a_recipient_identifier_type(step, group1):
    # mock eInvoice (enctypted)
    wait()
